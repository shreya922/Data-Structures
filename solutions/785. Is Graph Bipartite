class Solution {
    public boolean isBipartite(int[][] graph) {
        ArrayList<ArrayList<Integer>> list=new ArrayList<ArrayList<Integer>>();
   int[] color=new int[graph.length];
        for(int i=0;i<graph.length;i++)
        {
            //list.add(new ArrayList<Integer>());
            color[i]=-1;
        }
        for(int i=0;i<graph.length;i++)
        {
            ArrayList<Integer> templist=new ArrayList<Integer>();
            for(int j=0;j<graph[i].length;j++)
                templist.add(graph[i][j]);
          list.add(templist);
            
        }
        System.out.print(list);
        //color[0]=1;
        for(int i=0;i<graph.length;i++)
        {
            if(color[i]==-1)
            {
                if(check(list,color,i)==false)
                    return false;
            }
          }
        return true;
    }
    public boolean check(ArrayList<ArrayList<Integer>> list,int[] color,int s)
    {
        if(color[s]==-1)
        color[s]=1;
        for(int neib:list.get(s))
        {
            if(color[neib]==-1)
            {
                color[neib]=1-color[s];
                if(check(list,color,neib)==false)
                    return false;
            }
            else if(color[neib]==color[s])
                return false;
       }
        return true;
}
}
